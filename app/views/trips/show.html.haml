- title 'Sacramento to NYC'
- javascript 'http://maps.google.com/maps/api/js?sensor=false'

#map{ :style => 'width: 100%; height: 500px' }
  Please enable Javascript.
    
- content_for :javascript do
  :plain
    var geocoder = new google.maps.Geocoder();
    var stops = #{@stops.to_json};
    var latlng = new google.maps.LatLng(39.805107,-98.539724),
        infoWindow = new google.maps.InfoWindow(),
        myOptions = {
          zoom: 4,
          center: latlng,
          mapTypeId: google.maps.MapTypeId.ROADMAP
        };
    var map = new google.maps.Map(document.getElementById("map"), myOptions);

  - @stops.each_with_index do |stop, i|
    :plain
      var marker#{i} = new google.maps.Marker({
        map: map,
        position: new google.maps.LatLng(#{stop[:lat]}, #{stop[:lng]}),
        icon: '/images/content/#{stop[:from_user] == 'garrettb' ? 'garrett.png' : 'jake.png'}',
        title: '#{i}'
      });

      google.maps.event.addListener(marker#{i}, 'click', function() {
        openInfoWindow(marker#{i});
      });

  :plain
    // From DHH's gist: http://gist.github.com/58761
    var DateHelper = {
      // Takes the format of "Jan 15, 2007 15:45:00 GMT" and converts it to a relative time
      // Ruby strftime: %b %d, %Y %H:%M:%S GMT
      time_ago_in_words_with_parsing: function(from) {
        var date = new Date; 
        date.setTime(Date.parse(from));
        return this.time_ago_in_words(date);
      },
  
      time_ago_in_words: function(from) {
        return this.distance_of_time_in_words(new Date, from);
      },
 
      distance_of_time_in_words: function(to, from) {
        var distance_in_seconds = ((to - from) / 1000);
        var distance_in_minutes = Math.floor(distance_in_seconds / 60);
 
        if (distance_in_minutes == 0) { return 'less than a minute ago'; }
        if (distance_in_minutes == 1) { return 'a minute ago'; }
        if (distance_in_minutes < 45) { return distance_in_minutes + ' minutes ago'; }
        if (distance_in_minutes < 90) { return 'about 1 hour ago'; }
        if (distance_in_minutes < 1440) { return 'about ' + Math.floor(distance_in_minutes / 60) + ' hours ago'; }
        if (distance_in_minutes < 2880) { return '1 day ago'; }
        if (distance_in_minutes < 43200) { return Math.floor(distance_in_minutes / 1440) + ' days ago'; }
        if (distance_in_minutes < 86400) { return 'about 1 month ago'; }
        if (distance_in_minutes < 525960) { return Math.floor(distance_in_minutes / 43200) + ' months ago'; }
        if (distance_in_minutes < 1051199) { return 'about 1 year ago'; }
 
        return 'over ' + (distance_in_minutes / 525960).floor() + ' years ago';
      }
    };
      
    function openInfoWindow(marker) {
      var i = parseInt(marker.getTitle());
      var address;
      
      geocoder.geocode({'latLng': marker.getPosition()}, function(results, status) {
        if (status == google.maps.GeocoderStatus.OK) {
          address = results[0].formatted_address;
        }
        
        var status = stops[i].text.replace(/((https?|s?ftp|ssh)\:\/\/[^"\s\<\>]*[^.,;'">\:\s\<\>\)\]\!])/g, function(url) {
          return '<a href="'+ url +'">'+ url +'</a>';
        }).replace(/\B@([_a-z0-9]+)/ig, function(reply) {
          return reply.charAt(0)+'<a href="http://twitter.com/'+ reply.substring(1) +'">'+ reply.substring(1) +'</a>';
        }).replace(/>http:\/\/twitpic.com\/([_a-z0-9]+)</, function(reply) {
          var item = reply.substring(20, 26);
          return '><img src="http://twitpic.com/show/large/'+ item +'" alt="" /><';
        }).replace('#gbnyc', '');
      
        var content = "<img src='http://img.tweetimag.es/i/" + stops[i].from_user + "_n' style='margin: 0 5px 5px 0;float:left' alt='' /><strong>"+ address + "</strong><br />" + " " + status + " <em>" + DateHelper.time_ago_in_words_with_parsing(stops[i].created_at) + "</em>";
        infoWindow.setContent(content);
        infoWindow.open(map, marker);
      });
    }