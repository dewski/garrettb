- title 'Sacramento to NYC'
- javascript "http://maps.google.com/maps?file=api&v=3&key=#{GOOGLE_MAPS_API_KEY}&sensor=false"

#map{ :style => 'width: 100%; height: 500px' }
  Please enable Javascript.
    
- content_for :javascript do
  :plain
    var geocoder = new GClientGeocoder();
    var marker;
    var stops = #{@stops.to_json};
    
    var map = new GMap2(document.getElementById('map'));
    map.setCenter(new GLatLng(39.805107,-98.539724), 4);

  - @stops.each_with_index do |stop, i|
    :plain
      
      // Marker
      map.addOverlay(createMarker(new GLatLng(#{stop[:lat]}, #{stop[:lng]}), '#{i}', '#{stop[:from_user]}'));

  :plain
  
    var dayOne = new GPolygon([
      new GLatLng(49.02, -105.53),
      new GLatLng(49.02, -117,77),
      new GLatLng(49.02, -123.33),
      new GLatLng(48.55, -123.07),
      new GLatLng(48.22, -123.42),
      new GLatLng(48.46, -124.63),
      new GLatLng(47.87, -124.69),
      new GLatLng(47.44, -124.32),
      new GLatLng(46.74, -124.08),
      new GLatLng(45.58, -123.97),
      new GLatLng(42.78, -124.61),
      new GLatLng(41.74, -124.33),
      new GLatLng(40.53, -124.37),
      new GLatLng(39.66, -123.82),
      new GLatLng(38.93, -123.73),
      new GLatLng(38.13, -122.96),
      new GLatLng(37.67, -122.56),
      new GLatLng(37.14, -122.37),
      new GLatLng(36.86, -121.77),
      new GLatLng(36.53, -122.01),
      new GLatLng(35.37, -120.98),
      new GLatLng(35.07, -120.65)
    ], "#aaa", 2, 0.5, "#eee", 0.15);
    
    map.addOverlay(dayOne);
  
    // From DHH's gist: http://gist.github.com/58761
    var DateHelper = {
      // Takes the format of "Jan 15, 2007 15:45:00 GMT" and converts it to a relative time
      // Ruby strftime: %b %d, %Y %H:%M:%S GMT
      time_ago_in_words_with_parsing: function(from) {
        var date = new Date; 
        date.setTime(Date.parse(from));
        return this.time_ago_in_words(date);
      },
  
      time_ago_in_words: function(from) {
        return this.distance_of_time_in_words(new Date, from);
      },
 
      distance_of_time_in_words: function(to, from) {
        var distance_in_seconds = ((to - from) / 1000);
        var distance_in_minutes = Math.floor(distance_in_seconds / 60);
 
        if (distance_in_minutes == 0) { return 'less than a minute ago'; }
        if (distance_in_minutes == 1) { return 'a minute ago'; }
        if (distance_in_minutes < 45) { return distance_in_minutes + ' minutes ago'; }
        if (distance_in_minutes < 90) { return 'about 1 hour ago'; }
        if (distance_in_minutes < 1440) { return 'about ' + Math.floor(distance_in_minutes / 60) + ' hours ago'; }
        if (distance_in_minutes < 2880) { return '1 day ago'; }
        if (distance_in_minutes < 43200) { return Math.floor(distance_in_minutes / 1440) + ' days ago'; }
        if (distance_in_minutes < 86400) { return 'about 1 month ago'; }
        if (distance_in_minutes < 525960) { return Math.floor(distance_in_minutes / 43200) + ' months ago'; }
        if (distance_in_minutes < 1051199) { return 'about 1 year ago'; }
 
        return 'over ' + Math.floor(distance_in_minutes / 525960) + ' years ago';
      }
    };
    
    function createMarker(points, title, from) {
      var icon = GIcon(G_DEFAULT_ICON);
      icon.image = '/images/content/' + from + '.png';
      
      var marker = new GMarker(points, {
        icon: icon,
        title: title
      });
      return marker;
    }
      
    function openInfoWindow(marker) {
      var i = parseInt(marker.getTitle());
      var address, place = place = response.Placemark[0];
      var geo = marker.getPosition();
      alert(geo[0]);
      alert(geo[1]);
      
      geocoder.getLocations(latlng, function (response) {
        alert(response);
      })
    }